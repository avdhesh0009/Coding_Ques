class Solution
{
    private:
    void dfs(vector<int>adj[],int n,vector<bool>&vis,stack<int>&s,int src){
        vis[src]=true;
        for(int i=0;i<adj[src].size();i++){
            int node=adj[src][i];
            if(!vis[node]){
                dfs(adj,n,vis,s,node);
            }
        }
        s.push(src);
    }
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<bool>vis(V,false);
	    stack<int>s;
	    for(int i=0;i<V;i++){
	        if(!vis[i]){
	            dfs(adj,V,vis,s,i);
	        }
	    }
	    vector<int>v;
	    while(!s.empty()){
	        v.push_back(s.top());
	        s.pop();
	    }
	    return v;
	}
};
