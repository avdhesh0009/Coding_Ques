#include<iostream>
using namespace std;
void swap(int &a,int &b){
    int temp=a;
    a=b;
    b=temp;
}
void upheapify(int arr[],int n){
    int i=1;
    while(i<n){
        int childindex=i;
        while(childindex>0){
             int parentindex=(childindex-1)/2;
             if(arr[parentindex]>arr[childindex]){
                 swap(arr[parentindex],arr[childindex]);
                 childindex=parentindex;
             }
            else{
                break;
            }
        }
       i++;
    }
}
void downheapify(int arr[], int n){
    int lastindex=n-1;
    while(lastindex>0){
        swap(arr[0],arr[lastindex]);
         int parentindex=0;
         int childindex1=2*parentindex+1;
         int childindex2=2*parentindex+2;
         int minindex=0;
        while(childindex1<lastindex){
            if(arr[minindex]>arr[childindex1]){
                minindex=childindex1;
            }
            if(childindex2<lastindex&&arr[minindex]>arr[childindex2]){
                minindex=childindex2;
            }
            if(minindex==parentindex){
                break;
            }
            swap(arr[minindex],arr[parentindex]);
            parentindex=minindex;
            childindex1=2*parentindex+1;
            childindex2=2*parentindex+2;
        }
        lastindex--;
    }
    
}
void heapSort(int arr[], int n) {
    // Write your code
    upheapify(arr,n);
    downheapify(arr,n);
}
